{"version":3,"sources":["SeasonDisplay.js","Spinner.js","index.js"],"names":["seasonConfig","winter","text","iconName","summer","SeasonDisplay","props","lat","month","season","Date","getMonth","_seasonConfig$season","react_default","a","createElement","className","concat","Spinner","message","defaultProps","App","state","errorMessage","_this2","this","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","src_SeasonDisplay_0","src_Spinner","renderContent","React","Component","ReactDOM","render","src_App","document","querySelector"],"mappings":"4LAGMA,SAAe,CACpBC,OAAS,CACRC,KAAM,oBACNC,SAAU,aAEXC,OAAS,CACRF,KAAM,qBACNC,SAAU,SA6BGE,EAbO,SAACC,GACtB,IAZkBC,EAAKC,EAYjBC,GAZYF,EAYOD,EAAMC,KAZRC,GAYa,IAAIE,MAAOC,YAXpC,GAAKH,EAAQ,EAChBD,EAAM,EAAI,SAAW,SAIrBA,EAAM,EAAI,SAAW,UAKGK,EAEPZ,EAAaS,GAA/BP,EAFyBU,EAEzBV,KAAMC,EAFmBS,EAEnBT,SAEb,OACCU,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kBAAAC,OAAoBR,IACjCI,EAAAC,EAAAC,cAAA,KAAGC,UAAS,qBAAAC,OAAuBd,EAAvB,WACZU,EAAAC,EAAAC,cAAA,UAAKb,GACLW,EAAAC,EAAAC,cAAA,KAAGC,UAAS,sBAAAC,OAAwBd,EAAxB,aChCTe,EAAU,SAACZ,GAChB,OAECO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACdV,EAAMa,WAQVD,EAAQE,aAAe,CACtBD,QAAS,cAGKD,QCdTG,6MACLC,MAAQ,CAAEf,IAAK,KAAMgB,aAAc,uFAEhB,IAAAC,EAAAC,KACnBC,OAAOC,UAAUC,YAAYC,mBAC5B,SAACC,GAAD,OAAcN,EAAKO,SAAS,CAACxB,IAAKuB,EAASE,OAAOC,YAClD,SAACC,GAAD,OAASV,EAAKO,SAAS,CAACR,aAAcW,EAAIf,oDAMzC,OAAIM,KAAKH,MAAMC,eAAiBE,KAAKH,MAAMf,IACnCM,EAAAC,EAAAC,cAAA,qBAAaU,KAAKH,MAAMC,eAG5BE,KAAKH,MAAMC,cAAgBE,KAAKH,MAAMf,IAClCM,EAAAC,EAAAC,cAACoB,EAAD,CAAe5B,IAAKkB,KAAKH,MAAMf,MAGhCM,EAAAC,EAAAC,cAACqB,EAAD,CAASjB,QAAQ,qEAOzB,OAECN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACdS,KAAKY,wBA9BSC,IAAMC,WAwCxBC,IAASC,OACR5B,EAAAC,EAAAC,cAAC2B,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.f40b8ab4.chunk.js","sourcesContent":["import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n\twinter : {\n\t\ttext: 'Burr it is chilly',\n\t\ticonName: 'snowflake'\n\t},\n\tsummer : {\n\t\ttext: 'Lets hit the beach',\n\t\ticonName: 'sun'\n\n\t}\n};\n\nconst getSeason = (lat, month) => {\n\tif(month > 2 && month < 9){\n\t\treturn lat > 0 ? 'summer' : 'winter';\n\t}\n\n\telse {\n\t\treturn lat > 0 ? 'winter' : 'summer';\n\t}\n\n}\n\nconst SeasonDisplay = (props) => {\n\tconst season = getSeason(props.lat, new Date().getMonth())\n\tconst {text, iconName} = seasonConfig[season];\n\t\n\treturn ( \n\t\t<div className={`season-display ${season}`}> \n\t\t\t<i className={`icon-left massive ${iconName} icon`}/>\n\t\t\t<h1>{text}</h1> \n\t\t\t<i className={`icon-right massive ${iconName} icon`} />\n\t\t</div>\n\t);\n};\n\nexport default SeasonDisplay;","import React from 'react';\n\nconst Spinner = (props) => {\n\treturn (\n\n\t\t<div className='ui active dimmer'>\n\t\t\t<div className='ui big text loader'>\n\t\t\t{props.message}\n\t\t\t</div>\n\t\t</div>\n\n\t\t);\n};\n\n\nSpinner.defaultProps = {\n\tmessage: 'Loading...'\n}\n\nexport default Spinner;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\nimport Spinner from './Spinner';\n\nclass App extends React.Component {\n\tstate = { lat: null, errorMessage: '' };\n\n\tcomponentDidMount(){\n\twindow.navigator.geolocation.getCurrentPosition(\n\t\t(position) => this.setState({lat: position.coords.latitude}),\n\t\t(err) => this.setState({errorMessage: err.message})\n\t\t);\t\t\n\t}\n\n\n\trenderContent() {\n\t\t\tif (this.state.errorMessage && !this.state.lat){\n\t\t\t\treturn <div>Error: {this.state.errorMessage}</div>;\n\t\t\t}\n\n\t\t\tif(!this.state.errorMessage && this.state.lat){\n\t\t\t\treturn <SeasonDisplay lat={this.state.lat} />;\n\t\t\t}\n\n\t\t\treturn <Spinner message='Please accept location requests'/>;\n\n\t}\n\n\n\t// React says we have to define render!!\n\trender(){\n\t\treturn(\n\n\t\t\t<div className='border red'>\n\t\t\t{this.renderContent()}\n\t\t\t</div>\n\n\n\t\t\t);\n\t\n\t}\n}\n\n\nReactDOM.render(\n\t<App />,\n\tdocument.querySelector('#root')\n\t);"],"sourceRoot":""}